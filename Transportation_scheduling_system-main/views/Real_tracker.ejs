<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Route Calculator</title>
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    
    <!-- Animate.css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #EBF4F5 0%, #B5C6E0 100%);
            min-height: 100vh;
        }
        
        #map { 
            height: 500px; 
            width: 100%; 
            margin-top: 10px; 
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            border: none;
            transition: all 0.3s ease;
        }
        
        #map:hover {
            box-shadow: 0 15px 30px rgba(0,0,0,0.15);
            transform: translateY(-5px);
        }
        
        .hero {
            background-image: url('https://images.unsplash.com/photo-1519003722824-194d4455a60c?ixlib=rb-4.0.3&auto=format&fit=crop&w=1500&q=80');
            background-size: cover;
            background-position: center;
            position: relative;
            padding: 4rem 0;
        }
        
        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.4);
            z-index: 1;
        }
        
        .hero > div {
            position: relative;
            z-index: 2;
        }
        
        .input-container {
            position: relative;
            margin-bottom: 1.5rem;
        }
        
        .input-container i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #4F46E5;
        }
        
        .custom-input {
            padding-left: 2.5rem !important;
            transition: all 0.3s ease;
            border: 2px solid transparent;
        }
        
        .custom-input:focus {
            border-color: #4F46E5;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        }
        
        .custom-btn {
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            z-index: 1;
        }
        
        .custom-btn::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            transition: all 0.4s ease;
            z-index: -1;
        }
        
        .custom-btn:hover::after {
            left: 0;
        }
        
        .custom-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }
        
        .result-card {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            margin-top: 1.5rem;
            opacity: 0;
            transform: translateY(20px);
        }
        
        .result-card.active {
            opacity: 1;
            transform: translateY(0);
        }
        
        .nav-link {
            position: relative;
        }
        
        .nav-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 0;
            background-color: #4F46E5;
            transition: width 0.3s ease;
        }
        
        .nav-link:hover::after {
            width: 100%;
        }
        
        .loader {
            display: none;
            width: 48px;
            height: 48px;
            border: 5px solid #FFF;
            border-bottom-color: #4F46E5;
            border-radius: 50%;
            box-sizing: border-box;
            animation: rotation 1s linear infinite;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 10;
        }
        
        @keyframes rotation {
            0% { transform: translate(-50%, -50%) rotate(0deg); }
            100% { transform: translate(-50%, -50%) rotate(360deg); }
        }
        
        .pulse {
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        #shipmentMessage {
            animation: fadeInUp 1s ease-out;
        }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100">
    <div id="loader" class="loader"></div>

    <!-- Navigation Bar -->
    <nav class="bg-gradient-to-r from-indigo-600 to-blue-500 text-white shadow-lg sticky top-0 z-10 animate__animated animate__fadeIn">
        <div class="max-w-6xl mx-auto px-4">
            <div class="flex justify-between">
                <div class="flex space-x-7">
                    <div>
                        <a href="#" class="flex items-center py-4 px-2">
                            <i class="fas fa-route text-2xl mr-2"></i>
                            <span class="font-semibold text-white text-lg">Route Calculator</span>
                        </a>
                    </div>
                </div>
                <div class="hidden md:flex items-center space-x-1">
                    <a href="/user-dashboard" class="py-4 px-2 text-white nav-link font-semibold hover:text-blue-200 transition duration-300">
                        <i class="fas fa-home mr-1"></i> Back To Home
                    </a>
                    <a href="#" class="py-4 px-2 text-white nav-link font-semibold hover:text-blue-200 transition duration-300">
                        <i class="fas fa-cog mr-1"></i> Services
                    </a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <div class="hero flex items-center justify-center py-20 animate__animated animate__fadeIn">
        <div class="bg-white rounded-xl p-8 w-full max-w-md shadow-2xl backdrop-blur-md bg-opacity-90">
            <h2 class="text-2xl font-bold text-center mb-6 text-indigo-700">
                <i class="fas fa-map-marker-alt mr-2 text-indigo-500"></i>Track Your Shipment
            </h2>
            
            <div class="input-container">
                <i class="fas fa-location-arrow"></i>
                <input id="pickup" type="text" placeholder="Enter pickup location or click on map" class="custom-input w-full px-4 py-3 border rounded-lg focus:outline-none" readonly>
            </div>

            <div class="input-container">
                <i class="fas fa-map-pin"></i>
                <input id="drop" type="text" placeholder="Enter drop location or click on map" class="custom-input w-full px-4 py-3 border rounded-lg focus:outline-none" readonly>
            </div>

            <button onclick="calculateRoute()" class="custom-btn w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 transition flex items-center justify-center">
                <i class="fas fa-calculator mr-2"></i> Calculate Route & Price
            </button>
            
            <button onclick="clearRoute()" class="custom-btn w-full bg-gray-600 text-white py-3 rounded-lg font-semibold hover:bg-gray-700 transition mt-2 flex items-center justify-center">
                <i class="fas fa-trash mr-2"></i> Clear Route
            </button>
            
            <button onclick="processShipment()" class="custom-btn w-full bg-green-600 text-white py-3 rounded-lg font-semibold hover:bg-green-700 transition mt-2 flex items-center justify-center">
                <i class="fas fa-truck mr-2"></i> Process Shipment
            </button>
            
            <div id="results" class="result-card">
                <h3 id="distance" class="text-xl font-semibold text-indigo-700 mb-2 text-center"></h3>
                <h3 id="duration" class="text-lg font-semibold text-gray-700 text-center"></h3>
                <h3 id="price" class="text-lg font-semibold text-gray-700 text-center"></h3>
                <h3 id="shipmentMessage" class="text-lg font-semibold text-green-700 text-center mt-4"></h3>
            </div>
        </div>
    </div>

    <!-- Map Section -->
    <div class="container mx-auto px-4 pb-12 animate__animated animate__fadeInUp" style="animation-delay: 0.5s">
        <h2 class="text-2xl font-bold text-indigo-700 mb-4 flex items-center">
            <i class="fas fa-map-marked-alt mr-2"></i> Interactive Map - Click to Set Points
        </h2>
        <div id="map" class="rounded-xl"></div>
    </div>

    <!-- Footer Section -->
    <footer class="bg-gradient-to-r from-indigo-800 to-blue-700 text-white py-6 mt-4 animate__animated animate__fadeIn" style="animation-delay: 0.8s">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-4 md:mb-0">
                    <p class="text-lg"><i class="fas fa-route mr-2"></i> Route Calculator</p>
                    <p class="text-sm text-indigo-200">&copy; 2025 All rights reserved.</p>
                </div>
                <div class="flex space-x-4">
                    <a href="#" class="text-white hover:text-indigo-200 transition">
                        <i class="fab fa-facebook-f text-xl"></i>
                    </a>
                    <a href="#" class="text-white hover:text-indigo-200 transition">
                        <i class="fab fa-twitter text-xl"></i>
                    </a>
                    <a href="#" class="text-white hover:text-indigo-200 transition">
                        <i class="fab fa-instagram text-xl"></i>
                    </a>
                    <a href="#" class="text-white hover:text-indigo-200 transition">
                        <i class="fab fa-linkedin-in text-xl"></i>
                    </a>
                </div>
            </div>
        </div>
    </footer>
 
    <script>
        // Hide results card initially
        document.getElementById('results').style.display = 'none';
        
        // Initialize map
        let map = L.map('map').setView([20.5937, 78.9629], 5); // Center of India

        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Variables to store markers and route
        let pickupMarker, dropMarker, routeLine;
        let pickupCoords = null, dropCoords = null;

        // Click handler for setting pickup/drop points
        map.on('click', function(e) {
            if (!pickupCoords) {
                // Set pickup point
                pickupCoords = e.latlng;
                pickupMarker = L.marker([e.latlng.lat, e.latlng.lng])
                    .addTo(map)
                    .bindPopup('📍 Pickup Point')
                    .openPopup();
                
                document.getElementById('pickup').value = `${e.latlng.lat.toFixed(4)}, ${e.latlng.lng.toFixed(4)}`;
                
            } else if (!dropCoords) {
                // Set drop point
                dropCoords = e.latlng;
                dropMarker = L.marker([e.latlng.lat, e.latlng.lng])
                    .addTo(map)
                    .bindPopup('🏁 Drop Point')
                    .openPopup();
                
                document.getElementById('drop').value = `${e.latlng.lat.toFixed(4)}, ${e.latlng.lng.toFixed(4)}`;
                
                // Auto-calculate route when both points are set
                calculateRoute();
            }
        });

        // Function to calculate route using OpenRouteService API
        async function calculateRoute() {
            if (!pickupCoords || !dropCoords) {
                alert('Please select both pickup and drop points by clicking on the map');
                return;
            }

            try {
                // Show loading
                document.getElementById('loader').style.display = 'block';
                const resultsCard = document.getElementById('results');
                resultsCard.style.display = 'block';
                resultsCard.innerHTML = '<p class="text-center text-indigo-600">🔄 Calculating route...</p>';

                // Send request to backend
                const response = await fetch('/calculate-route', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        pickupLat: pickupCoords.lat,
                        pickupLng: pickupCoords.lng,
                        dropLat: dropCoords.lat,
                        dropLng: dropCoords.lng
                    })
                });

                const data = await response.json();

                if (data.success) {
                    // Remove existing route line if any
                    if (routeLine) {
                        map.removeLayer(routeLine);
                    }

                    // Draw route on map using the road coordinates
                    routeLine = L.polyline(data.route, {
                        color: '#3388ff',
                        weight: 5,
                        opacity: 0.7,
                        smoothFactor: 1
                    }).addTo(map);

                    // Fit map to show entire route
                    map.fitBounds(routeLine.getBounds(), { padding: [20, 20] });

                    // Display results
                    resultsCard.innerHTML = `
                        <h3 class="text-xl font-semibold text-green-600 mb-2 text-center">✅ Route Calculated Successfully!</h3>
                        <p class="text-center"><strong>📏 Distance:</strong> <span class="text-indigo-600 font-bold">${data.distance} km</span></p>
                        <p class="text-center"><strong>⏱️ Duration:</strong> <span class="text-gray-700 font-bold">${data.duration || 'N/A'} minutes</span></p>
                        <p class="text-center"><strong>💰 Estimated Price:</strong> <span class="text-green-600 font-bold">₹${data.price}</span></p>
                        <p class="text-center mt-2"><strong>🛣️ Route:</strong> <span class="text-gray-600">Road path displayed on map</span></p>
                    `;
                    
                    resultsCard.classList.add('active');

                } else {
                    throw new Error(data.message);
                }

            } catch (error) {
                console.error('Error calculating route:', error);
                const resultsCard = document.getElementById('results');
                resultsCard.innerHTML = `
                    <p class="text-center text-red-600">❌ Error: ${error.message}</p>
                `;
            } finally {
                // Hide loader
                document.getElementById('loader').style.display = 'none';
            }
        }

        // Function to clear route and markers
        function clearRoute() {
            // Remove markers
            if (pickupMarker) map.removeLayer(pickupMarker);
            if (dropMarker) map.removeLayer(dropMarker);
            if (routeLine) map.removeLayer(routeLine);

            // Reset variables
            pickupMarker = dropMarker = routeLine = null;
            pickupCoords = dropCoords = null;

            // Clear inputs
            document.getElementById('pickup').value = '';
            document.getElementById('drop').value = '';
            document.getElementById('results').style.display = 'none';

            // Reset map view
            map.setView([20.5937, 78.9629], 5);
        }

        // Function to process shipment
        function processShipment() {
            const pickup = document.getElementById("pickup").value;
            const drop = document.getElementById("drop").value;

            if (!pickup || !drop) {
                alert("Please select both pickup and drop locations by clicking on the map first.");
                return;
            }

            // Show loader
            document.getElementById('loader').style.display = 'block';
            
            // Simulate processing delay
            setTimeout(() => {
                // Hide loader
                document.getElementById('loader').style.display = 'none';
                
                // Show success message
                const resultsCard = document.getElementById('results');
                const currentContent = resultsCard.innerHTML;
                resultsCard.innerHTML = currentContent + '<p class="text-center text-green-600 font-bold mt-4"><i class="fas fa-check-circle mr-2"></i>Shipment processed successfully! Redirecting...</p>';
                
                // Redirect after a short delay for better UX
                setTimeout(() => {
                    window.location.href = "/shipment";
                }, 1500);
            }, 1000);
        }
        
        // Add pulse animation to map when loaded
        map.on('load', function() {
            document.getElementById('map').classList.add('pulse');
            setTimeout(() => {
                document.getElementById('map').classList.remove('pulse');
            }, 2000);
        });

        // Optional: Add current location button functionality
        function getCurrentLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    const lat = position.coords.latitude;
                    const lng = position.coords.longitude;
                    map.setView([lat, lng], 13);
                    
                    // Set as pickup point
                    pickupCoords = {lat: lat, lng: lng};
                    if (pickupMarker) map.removeLayer(pickupMarker);
                    pickupMarker = L.marker([lat, lng])
                        .addTo(map)
                        .bindPopup('📍 Your Current Location')
                        .openPopup();
                    
                    document.getElementById('pickup').value = `${lat.toFixed(4)}, ${lng.toFixed(4)}`;
                });
            }
        }
    </script>

</body>
</html>
